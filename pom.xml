<?xml version="1.0"?>
<!--

    Copyright (C) 2012 Red Hat, Inc. (jcasey@redhat.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.containerstore.maven.ext</groupId>
  <artifactId>pom-manipulation-ext</artifactId>
  <version>1.5.4</version>
  
  <name>POM Manipulation Extension for Maven</name>
  <url>http://github.com/jdcasey/pom-manipulation-ext</url>
  <inceptionYear>2012</inceptionYear>
  
  <description>
    lib/ext-style extension for Apache Maven that allows pre-processing of Maven pom.xml's.
  </description>

  <distributionManagement>
    <repository>
      <id>tcs-releases</id>
      <url>
        http://nexus.containerstore.com/nexus/content/repositories/releases
      </url>
      <uniqueVersion>false</uniqueVersion>
    </repository>
    <snapshotRepository>
      <id>tcs-snapshots</id>
      <url>
        http://nexus.containerstore.com/nexus/content/repositories/snapshots
      </url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>
  
  <licenses>
    <license>
      <name>APLv2.0</name>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>jdcasey</id>
      <name>John Casey</name>
      <email>jdcasey@commonjava.org</email>
    </developer>
    <developer>
      <id>rnc</id>
      <name>Nick Cross</name>
      <email>ncross@redhat.com</email>
    </developer>
    <developer>
      <id>pgier</id>
      <name>Paul Gier</name>
      <email>pgier@redhat.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:http://github.com/release-engineering/pom-manipulation-ext.git</connection>
    <developerConnection>scm:git:git@github.com:release-engineering/pom-manipulation-ext.git</developerConnection>
    <url>http://github.com/release-engineering/pom-manipulation-ext</url>
    <tag>pom-manipulation-ext-1.5.4</tag>
  </scm>
  
  <properties>
    <projectOwner>Red Hat, Inc.</projectOwner>
    <projectEmail>jcasey@redhat.com</projectEmail>
    
    <mavenVersion>3.0.4</mavenVersion>
    <galleyVersion>0.6.10</galleyVersion>
    <atlasVersion>0.13.6</atlasVersion>
    <it.maven.home>${project.build.directory}/apache-maven-${mavenVersion}</it.maven.home>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>


  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <version>1.5.5</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.commonjava.maven.atlas</groupId>
      <artifactId>atlas-identities</artifactId>
      <version>${atlasVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.commonjava.maven.galley</groupId>
      <artifactId>galley-core</artifactId>
      <version>${galleyVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.commonjava.maven.galley</groupId>
      <artifactId>galley-transport-httpclient</artifactId>
      <version>${galleyVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.commonjava.maven.galley</groupId>
      <artifactId>galley-transport-filearc</artifactId>
      <version>${galleyVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.commonjava.maven.galley</groupId>
      <artifactId>galley-maven</artifactId>
      <version>${galleyVersion}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.12</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.12</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.commonjava.maven</groupId>
      <artifactId>maven3-model-jdom-support</artifactId>
      <version>1.3.1</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.byteman</groupId>
      <artifactId>byteman-bmunit</artifactId>
      <version>2.1.4.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                  <archive>
                      <index>true</index>
                      <manifest>
                          <addDefaultSpecificationEntries>
                              true
                          </addDefaultSpecificationEntries>
                          <addDefaultImplementationEntries>
                              true
                          </addDefaultImplementationEntries>
                      </manifest>
                      <manifestEntries>
                          <Implementation-URL>${project.url}</Implementation-URL>
                          <Java-Version>${java.version}</Java-Version>
                          <Java-Vendor>${java.vendor}</Java-Vendor>
                          <Os-Name>${os.name}</Os-Name>
                          <Os-Arch>${os.arch}</Os-Arch>
                          <Os-Version>${os.version}</Os-Version>
                          <Scm-Url>${project.scm.url}</Scm-Url>
                          <Scm-Connection>${project.scm.connection}</Scm-Connection>
                          <Scm-Revision>${buildNumber}</Scm-Revision>
                      </manifestEntries>
                  </archive>
              </configuration>
          </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <escapeString>\</escapeString>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <useReleaseProfile>false</useReleaseProfile>
            <arguments>-Prelease,run-its</arguments>
          </configuration>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.3</version>
            <executions>
                <execution>
                    <phase>validate</phase>
                    <id>buildnumber</id>
                    <goals>
                        <goal>create</goal>
                    </goals>
                    <configuration>
                        <shortRevisionLength>8</shortRevisionLength>
                        <timestampFormat>{0,date,dd MMMM yyyy}</timestampFormat>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-metadata</artifactId>
          <version>1.5.5</version>
          <executions>
            <execution>
              <goals>
                <goal>generate-metadata</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
              <debug>true</debug>
              <source>1.6</source>
              <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
          <executions>
            <execution>
              <id>unpack-maven</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>unpack-dependencies</goal>
              </goals>
              <configuration>
                <includeArtifactIds>apache-maven</includeArtifactIds>
                <includeClassifiers>bin</includeClassifiers>
                <includeTypes>zip</includeTypes>
                <outputDirectory>${project.build.directory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>1.8</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <debug>true</debug>
                <goals>
                  <goal>clean</goal>
                  <goal>package</goal>
                </goals>
                <!-- <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo> -->
                <localRepositoryPath>${localRepositoryUrl}</localRepositoryPath>
                <mavenHome>${it.maven.home}</mavenHome>
                <setupIncludes>
                    <setupInclude>setup/*/pom.xml</setupInclude>
                  </setupIncludes>
                <!-- mavenExecutable>mvnDebug</mavenExecutable -->
                <pomIncludes>
                    <!-- <pomInclude>remote-plugin-management-invalid/pom.xml</pomInclude> -->
                    <pomInclude>simple-numeric-directory-path/parent/pom.xml</pomInclude>
                    <pomInclude>*/pom.xml</pomInclude>
                </pomIncludes>
                <projectsDirectory>${project.build.directory}/it</projectsDirectory>
                <postBuildHookScript>verify</postBuildHookScript>
                <settingsFile>src/it/settings.xml</settingsFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.2</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.1</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>2.10</version>
          <configuration>
            <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
            <properties>
              <owner>${projectOwner}</owner>
              <email>${projectEmail}</email>
            </properties>
            <excludes>
              <exclude>**/README</exclude>
              <exclude>**/LICENSE*</exclude>
              <!--
              <exclude>src/test/resources/**</exclude>
              <exclude>src/main/resources/**</exclude>
              -->
            </excludes>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.2</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>shade</goal>
                    </goals>
                    <configuration>
                        <artifactSet>
                            <includes>
                                <include>ch.qos.logback:*</include>
                                <include>org.slf4j:*</include>
                                <include>org.apache.httpcomponents:*</include>
                                <include>org.jdom:jdom2</include>
                                <include>org.commonjava.*:*</include>
                                <include>commons-lang:commons-lang</include>
                                <include>commons-io:commons-io</include>
                                <include>commons-codec:commons-codec</include>
                                <include>commons-jxpath:commons-jxpath</include>
                                <include>org.codehaus.plexus:plexus-interpolation</include>
                                <include>org.jsoup:jsoup</include>
                            </includes>
                        </artifactSet>
                        <relocations>
                            <relocation>
                                <pattern>org.slf4j</pattern>
                                <shadedPattern>org.commonjava.slf4j</shadedPattern>
                            </relocation>
                        </relocations>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
        </plugin>
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <profile>
      <id>formatting</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>process-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>run-its</id>

      <properties>
        <localRepositoryUrl>${project.build.directory}/local-repo</localRepositoryUrl>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.apache.maven</groupId>
          <artifactId>apache-maven</artifactId>
          <version>${mavenVersion}</version>
          <type>zip</type>
          <classifier>bin</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <testResources>
          <testResource>
            <directory>src/it</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>expression-not-rewritten/pom.xml</exclude>
            </excludes>
            <targetPath>../it</targetPath>
          </testResource>
          <testResource>
            <directory>src/it</directory>
            <filtering>false</filtering>
            <includes>
              <include>expression-not-rewritten/pom.xml</include>
            </includes>
            <targetPath>../it</targetPath>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${it.maven.home}/lib/ext</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>${project.build.finalName}.jar</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-invoker-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
